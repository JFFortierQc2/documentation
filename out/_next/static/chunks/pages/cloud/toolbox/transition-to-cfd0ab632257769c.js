(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[8348],{4875:function(e,n){var t;/*!
	Copyright (c) 2018 Jed Watson.
	Licensed under the MIT License (MIT), see
	http://jedwatson.github.io/classnames
*/!function(){"use strict";var s={}.hasOwnProperty;function i(){for(var e=[],n=0;n<arguments.length;n++){var t=arguments[n];if(t){var o=typeof t;if("string"===o||"number"===o)e.push(t);else if(Array.isArray(t)){if(t.length){var r=i.apply(null,t);r&&e.push(r)}}else if("object"===o){if(t.toString!==Object.prototype.toString&&!t.toString.toString().includes("[native code]")){e.push(t.toString());continue}for(var a in t)s.call(t,a)&&t[a]&&e.push(a)}}}return e.join(" ")}e.exports?(i.default=i,e.exports=i):void 0!==(t=(function(){return i}).apply(n,[]))&&(e.exports=t)}()},2911:function(e,n,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/cloud/toolbox/transition-to",function(){return t(1317)}])},5196:function(e,n,t){"use strict";t.d(n,{H4:function(){return r},iA:function(){return b},Td:function(){return g},Tr:function(){return T}});var s=t(1527),i=t(4875),o=t.n(i);t(959);let{H4:r,H5:a,H6:c,P:l,Hr:d,A:h,Ol:x,Ul:u,Li:p,Br:m,Img:j,Table:b,Tbody:f,Td:g,Th:w,Thead:v,Tr:T}={H4:e=>(0,s.jsx)("h4",{...e,className:o()("mt-6 text-xl font-bold",e.className)}),H5:e=>(0,s.jsx)("h5",{...e,className:o()("tracking-wide text-zinc-900",e.className)}),H6:e=>(0,s.jsx)("h6",{...e,className:o()("tracking-wide text-zinc-900",e.className)}),P:e=>(0,s.jsx)("p",{...e,className:o()("mb-2 tracking-wide text-zinc-600",e.className)}),Hr:e=>(0,s.jsx)("hr",{className:o()("my-12",e.className)}),A:e=>(0,s.jsx)("a",{...e,className:o()("font-normal text-zinc-600 underline decoration-blue-500 decoration-2 underline-offset-1 hover:text-zinc-900 hover:decoration-4 hover:underline-offset-2",e.className)}),Ol:e=>(0,s.jsx)("ol",{...e,className:o()("mb-4 list-decimal space-y-2 pl-5 tracking-wide text-zinc-600 marker:text-zinc-800",e.className)}),Ul:e=>(0,s.jsx)("ul",{...e,className:o()("mb-4 list-disc space-y-2 pl-5 tracking-wide text-zinc-600 ",e.className)}),Li:e=>(0,s.jsx)("li",{...e,className:o()("text-zinc-600",e.className)}),Br:e=>(0,s.jsx)("br",{...e}),Img:e=>(0,s.jsx)("img",{...e,className:o()("mb-6",e.className)}),Table:e=>(0,s.jsx)("table",{...e,className:o()("w-full border-collapse",e.className)}),Tbody:e=>(0,s.jsx)("tbody",{...e,className:o()("border",e.className)}),Td:e=>(0,s.jsx)("td",{...e,className:o()("block border border-zinc-300 p-2 text-zinc-600 dark:text-gray-200 lg:table-cell",e.className)}),Th:e=>(0,s.jsx)("th",{...e,className:o()("block border border-zinc-300 p-2 lg:table-cell",e.className)}),Thead:e=>(0,s.jsx)("thead",{...e,className:o()("border",e.className)}),Tr:e=>(0,s.jsx)("tr",{...e,className:o()("even:bg-zinc-100 dark:even:bg-gray-600/20",e.className)})}},1317:function(e,n,t){"use strict";t.r(n);var s=t(1527),i=t(452),o=t(6736);t(8027);var r=t(751),a=t(5196);function c(e){let n=Object.assign({h1:"h1",p:"p",h2:"h2",strong:"strong",em:"em",code:"code"},(0,o.ah)(),e.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{children:"Transition to"}),"\n",(0,s.jsx)(n.p,{children:'A Transition is like a "decision point" in a conversation with a chatbot, where the bot has to decide what to do next based on what the user has said or done. It\'s like a set of instructions that the bot follows to determine which "path" to take in the conversation.'}),"\n",(0,s.jsx)("br",{}),"\n",(0,s.jsx)(n.p,{children:"For example, if the user says something specific, the bot may need to ask a follow-up question or provide a certain response."}),"\n",(0,s.jsx)(n.p,{children:"The transition statement is what tells the bot which response or question to provide based on what the user has said or done."}),"\n",(0,s.jsx)(n.h2,{id:"expression",children:"Expression"}),"\n",(0,s.jsx)(n.p,{children:"An Expression transition is a conditional statement that tells the bot which node should be processed next if the condition is met. It uses generative AI to generate the conditions using plain text."}),"\n",(0,s.jsx)("br",{}),"\n",(0,s.jsx)(n.p,{children:"This type of transition allows you to check user input, user variables, workflow variables, and even create advanced JavaScript\nexpressions to determine which node the bot should transition to next."}),"\n",(0,s.jsx)("br",{}),"\n",(0,s.jsx)(n.p,{children:"You can use a combination of these checks to create complex conditions that will determine which node the bot will transition\nto next."}),"\n",(0,s.jsx)(r.UW,{children:(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Generative AI Transitions"})," ",(0,s.jsx)("br",{}),"\nYou can use generative AI to generate your conditions using plain text. In order to achieve what you exactly want,\nhere are some examples that should guide you, but you are not limited to it:"]})}),"\n",(0,s.jsxs)(a.iA,{children:[(0,s.jsxs)(a.Tr,{children:[(0,s.jsx)(a.Td,{children:(0,s.jsx)(n.strong,{children:"Example"})}),(0,s.jsx)(a.Td,{children:(0,s.jsx)(n.strong,{children:"Description"})})]}),(0,s.jsxs)(a.Tr,{children:[(0,s.jsx)(a.Td,{children:"User Input"}),(0,s.jsx)(a.Td,{children:(0,s.jsxs)(n.p,{children:["To check if the user entered a value between 1 and 10, you can use ",(0,s.jsx)(n.strong,{children:"User Input"})," ",(0,s.jsx)("br",{}),"Example: ",(0,s.jsx)(n.em,{children:"user input is between 1 & 10"})]})})]}),(0,s.jsxs)(a.Tr,{children:[(0,s.jsx)(a.Td,{children:"User Variable"}),(0,s.jsx)(a.Td,{children:(0,s.jsxs)(n.p,{children:["To retrieve a value from the user variable, you can use ",(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"user.{variable name}"})})," ",(0,s.jsx)("br",{}),"\nExample: ",(0,s.jsxs)(n.em,{children:["user language is ",(0,s.jsx)("u",{children:"English"})]})]})})]}),(0,s.jsxs)(a.Tr,{children:[(0,s.jsx)(a.Td,{children:"Workflow Variable"}),(0,s.jsxs)(a.Td,{children:["To check a workflows variable, you can use ",(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"workflow.{variable name}"})}),(0,s.jsx)("br",{}),"\nExample: ",(0,s.jsx)(n.em,{children:"workflow variable supportEmail contains Botpress"})]})]}),(0,s.jsxs)(a.Tr,{children:[(0,s.jsx)(a.Td,{children:"Intents"}),(0,s.jsxs)(a.Td,{children:['You can combine multiple checks together, for example you can check if an intent is of type "affirmative", and its confidence is more than 50%. ',(0,s.jsx)("br",{}),"\nExample: ",(0,s.jsx)(n.em,{children:"intent is affirmative and intent confidence is 50%"})," "]})]}),(0,s.jsxs)(a.Tr,{children:[(0,s.jsx)(a.Td,{children:"Advanced"}),(0,s.jsx)(a.Td,{children:(0,s.jsx)(n.p,{children:"You can use an advanced javascript expression to move from one node to the next when the expression satisfies the condition."})})]})]}),"\n",(0,s.jsx)("br",{}),"\n",(0,s.jsx)(n.h2,{id:"intent",children:"Intent"}),"\n",(0,s.jsx)(n.p,{children:"An Intent transition allows you to create an inline intent (or node-specific intent). Only if this intent is elected will the condition be met."}),"\n",(0,s.jsx)("br",{}),"\n",(0,s.jsx)(n.p,{children:"This type of transition is useful when you want to create a specific response for a particular intent. You can create an\nintent for a specific node, and the bot will transition to that node only if that intent is detected in the user's message."}),"\n",(0,s.jsx)("br",{}),"\n",(0,s.jsx)(n.p,{children:'For example, if a user says "I want to book a hotel room," the bot can transition to a node that is specific to handling\nhotel room bookings.'})]})}n.default=(0,i.j)({MDXContent:function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,o.ah)(),e.components);return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)},pageOpts:{filePath:"pages/cloud/toolbox/transition-to.mdx",route:"/cloud/toolbox/transition-to",headings:[{depth:1,value:"Transition to",id:"transition-to"},{depth:2,value:"Expression",id:"expression"},{depth:2,value:"Intent",id:"intent"}],timestamp:1687979724e3,title:"Transition to"},pageNextRoute:"/cloud/toolbox/transition-to"})}},function(e){e.O(0,[452,9774,2888,179],function(){return e(e.s=2911)}),_N_E=e.O()}]);